[
  {
    "path": "posts/2020-12-28-diabetes-in-rural-north-carolina-exploring-prevalence-trends/",
    "title": "Diabetes in Rural North Carolina : Exploring Prevalence Trends",
    "description": "This post introduces the exploration of the Diabetes epidemic in North Carolina",
    "author": [
      {
        "name": "Kyle Belanger",
        "url": {}
      }
    ],
    "date": "2020-06-25",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nAbstract\r\nEnviroment\r\nData\r\nData Manipulation\r\nTweaks\r\nMerge\r\n\r\nOverall - National Level\r\nOverall - State Level\r\nOverall - North Carolina\r\nBy County - Geographical\r\nBy County - Percent Change\r\nConclusion and Next Steps\r\nSession information\r\nReferences\r\n\r\n\r\n\r\n\r\nAbstract\r\nDiabetes is growing at an epidemic rate in the United States. In North Carolina alone, diabetes and prediabetes cost an estimated $10.9 billion each year (American Diabetes Asssociation, 2015). This post introduces the exploration of the Diabetes epidemic in North Carolina. Through a series of posts this project will examine various public data available on diabetes and explore possible solutions to address the rise of diabetes in North Carolina. This investigation stems from the Capstone project of my Health Care Informatics Masters program. This post will answer the following questions:\r\n\r\nWhat is the overall trend of diabetes prevalence in the United States?\r\n\r\n\r\nWhat is the trend of diabetes at a State Level and how does diabetes prevalence vary by state and region?\r\n\r\n\r\nHow do trends in diabetes prevalence vary across counties of North Carolina?\r\n\r\n\r\nIn which counties of North Carolina does the largest change in diabetes prevalence occur?\r\n\r\n\r\nHow does change in diabetes prevalence compare between rural and urban counties?\r\n\r\nEnviroment\r\nThis section contains technical information for deeper analysis and reproduction. Casual readers are invited to skip it.\r\nPackages used in this report.\r\n\r\n\r\n# Attach these packages so their functions don't need to be qualified: http://r-pkgs.had.co.nz/namespace.html#search-path\r\nlibrary(magrittr) # enables piping : %>%\r\nlibrary(dplyr)    # data wrangling\r\nlibrary(ggplot2)  # graphs\r\nlibrary(tidyr)    # data tidying\r\nlibrary(maps)\r\nlibrary(mapdata)\r\nlibrary(sf)\r\nlibrary(readr)\r\n\r\n\r\n\r\nDefinitions of global object (file paths, factor levels, object groups ) used throughout the report.\r\n\r\n\r\n#set ggplot theme\r\nggplot2::theme_set(theme_bw())\r\n\r\n\r\n\r\nData\r\nThe data for this exploration comes from several sources:\r\nThe Diabetes data set for state and county levels were sourced from the US Diabetes Surveillance System; Division of Diabetes Translation - Centers for Disease Control and Prevention. The data was downloaded one year per file, and compiled into a single data set for analysis.\r\nThe Diabetes data set for National level data were sourced from the CDC’s National Health Interview Survey (NHIS)\r\nThe list of rural counties was taken from The Office of Rural Health Policy, the list is available here\r\n\r\n\r\n# load the data, and have all column names in lowercase\r\n\r\nnc_diabetes_data_raw <- read_csv(\"https://raw.githubusercontent.com/mmmmtoasty19/nc-diabetes-epidemic-2020/62bdaa6971fbdff09214de7c013d40122abbe40d/data-public/derived/nc-diabetes-data.csv\") %>% \r\n  rename_all(tolower)\r\n\r\nus_diabetes_data_raw <- read_csv(\"https://github.com/mmmmtoasty19/nc-diabetes-epidemic-2020/raw/62bdaa6971fbdff09214de7c013d40122abbe40d/data-public/raw/us_diabetes_totals.csv\"\r\n                                 ,skip = 2)\r\n\r\nrural_counties <- read_csv(\"https://github.com/mmmmtoasty19/nc-diabetes-epidemic-2020/raw/b29bfd93b20b73a7000d349cb3b55fd0822afe76/data-public/metadata/rural-counties.csv\")\r\n\r\ncounty_centers_raw <- read_csv(\"https://github.com/mmmmtoasty19/nc-diabetes-epidemic-2020/raw/b29bfd93b20b73a7000d349cb3b55fd0822afe76/data-public/raw/nc_county_centers.csv\", col_names = c(\"county\", \"lat\",\"long\"))\r\n\r\ndiabetes_atlas_data_raw <- read_csv(\"https://raw.githubusercontent.com/mmmmtoasty19/nc-diabetes-epidemic-2020/b29bfd93b20b73a7000d349cb3b55fd0822afe76/data-public/raw/DiabetesAtlasData.csv\"\r\n                                    ,col_types = cols(LowerLimit = col_skip(), \r\n                                                     UpperLimit = col_skip(),\r\n                                                     Percentage = col_double()), skip = 2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n# load in both US State Map and NC County Map\r\n\r\nnc_counties_map_raw <- st_as_sf(map(\"county\",region = \"north carolina\", plot = FALSE,fill = TRUE)) %>% \r\n  mutate_at(\"ID\", ~stringr::str_remove(.,\"north carolina,\"))\r\n\r\nstate_map_raw <- st_as_sf(map(\"state\",plot = FALSE,fill = TRUE ))\r\n\r\nnc_cities <-  st_as_sf(read_csv(\"https://github.com/mmmmtoasty19/nc-diabetes-epidemic-2020/raw/b29bfd93b20b73a7000d349cb3b55fd0822afe76/data-public/metadata/nc_cities.csv\"),\r\n                       coords = c(\"long\", \"lat\")\r\n                       ,remove = FALSE\r\n                       ,agr = \"constant\"\r\n                       ,crs = 4326)\r\n\r\n\r\n\r\nData Manipulation\r\nThe combined data used in this anaylsis can be downloaded here. The only tweaks done here are to combine the rural counties column, and the data for creating maps.\r\nTweaks\r\n\r\n\r\n\r\ncounty_centers <- county_centers_raw %>% \r\n  mutate_all(~stringr::str_replace_all(.,\r\n                                       c(\"\\\\°\"  = \"\"\r\n                                         ,\"\\\\+\" = \"\"\r\n                                         ,\"\\\\–\" = \"-\"\r\n                                       )\r\n  ) \r\n  ) %>%\r\n  mutate(across(c(\"lat\",\"long\"), ~iconv(.,from = 'UTF-8', to = 'ASCII//TRANSLIT'))\r\n         ,across(c(\"lat\",\"long\"),~stringr::str_remove_all(.,\"\\\\?\"))) %>% \r\n  mutate_at(c(\"lat\",\"long\"),as.numeric) %>%\r\n  mutate(across(\"long\", ~(. * -1))) %>% \r\n  mutate_at(\"county\", tolower)\r\n\r\n\r\n\r\n\r\nus_diabetes_data <- us_diabetes_data_raw %>% \r\n  filter(Year >= 2000) %>% \r\n  select( \"Year\",\"Total - Percentage\") %>% \r\n  rename(year = Year , us_pct = `Total - Percentage`)\r\n\r\ndiabetes_atlas_data <- diabetes_atlas_data_raw %>% \r\n  mutate_at(\"State\", tolower) %>% \r\n  filter(Year >= 2000)\r\n\r\nstate_map_abb <- state_map_raw %>% \r\n  left_join(read_csv(\"https://github.com/mmmmtoasty19/nc-diabetes-epidemic-2020/raw/b29bfd93b20b73a7000d349cb3b55fd0822afe76/data-public/metadata/state-abb.csv\") %>% \r\n              mutate_at(\"state\", tolower)\r\n            ,by = c(\"ID\" = \"state\") )\r\n\r\n\r\n\r\nMerge\r\n\r\n\r\n\r\n#join US totals to NC data \r\n\r\nnc_diabetes_data <- nc_diabetes_data_raw %>% \r\n  mutate_at(\"county\", ~stringr::str_replace_all(.,\"Mcdowell\",\"McDowell\")) %>% \r\n  mutate(\r\n    rural = county %in% rural_counties$rural_counties\r\n  ) %>% \r\n  mutate_at(\"county\",tolower) %>% \r\n  left_join(us_diabetes_data)\r\n\r\n\r\nnc_counties_map <- nc_counties_map_raw %>% \r\n  left_join(nc_diabetes_data, by = c(\"ID\" = \"county\")) %>% \r\n  left_join(county_centers, by = c(\"ID\" = \"county\")) %>% \r\n  rename(\r\n    center_long = long\r\n    ,center_lat = lat)\r\n\r\nstate_map <- state_map_abb %>% \r\n  left_join(diabetes_atlas_data, by = c(\"ID\" = \"State\")) %>% \r\n  rename_all(tolower)\r\n\r\n\r\n\r\nOverall - National Level\r\n\r\n\r\nus_diabetes_data <- us_diabetes_data %>% \r\n  mutate(\r\n    change = lead(us_pct) - us_pct\r\n    ,change = if_else(change > 0, TRUE, FALSE)\r\n  ) %>% \r\n  mutate_at(\"change\", ~stringr::str_replace_na(.,FALSE))\r\n\r\n\r\n\r\no_g1 <- us_diabetes_data %>% \r\n  ggplot(aes(x = year, y = us_pct)) +\r\n  geom_line(color= \"#D95F02\") +\r\n  # geom_line(aes(color = change, group = 1)) +\r\n  geom_point(shape = 21, size = 3,color= \"#D95F02\") +\r\n  # geom_point(aes(color = change),shape = 21, size = 3) +\r\n  scale_color_manual(values = c(\r\n    \"TRUE\" = \"#D95F02\"\r\n    ,\"FALSE\" = \"#7570B3\"\r\n  ), guide = FALSE) +\r\n  labs(\r\n    title    = \"Percentage of Diagnosed Diabetes in Adults (18+), National Level\"\r\n    ,x       = NULL\r\n    ,y       = NULL\r\n    ,caption = \"Note: Data from the CDC's National Health Interview Survey (NHIS)\"\r\n  )\r\n\r\no_g1\r\n\r\n\r\n\r\n\r\nOverall, the national average for diagnosed diabetes sharply rose through the early 2000’s, leveling off around 2010. These numbers however, are estimates based on the self-reported response to the CDC’s National Health Interview Survey, and do not represent the actual confirmed diagnoses. The CDC estimates that 1 in 5 adults have undiagnosed diabetes, therefore the numbers reported by the NHIS are likely to underestimate the true prevalence (Centers for Disease Control and Prevention, 2020).\r\nOverall - State Level\r\nState and County level data on diabetes prevalence are taken from the CDC’s Behavioral Risk Factor Surveillance System (BRFSS). These results are based on the question “Has a doctor, nurse, or other health professional ever told you that you have diabetes?”. Women who only experienced diabetes during pregnancy were excluded from the counts. The BRFSS is an ongoing, monthly telephone survey of the non-institutionalized adults (aged 18 years or older) in each state. The year 2011 saw a major change to the methodology of the survey, which started to include homes without a landline phone. This change was expected to increase coverage of lower income, lower educational levels, and younger age groups, because these groups often exclusively rely on cellular telephones for personal communication.(Pierannunzi et al., 2012)\r\n\r\n\r\ns_g1 <- state_map %>% \r\n  st_drop_geometry() %>% \r\n  ggplot(aes(x = year, y = percentage, color = region)) +\r\n  geom_line(aes(group = id ),alpha = 0.3,na.rm = TRUE) +\r\n  geom_smooth(method = \"lm\", se = FALSE) +\r\n  ggpmisc::stat_poly_eq(formula = y ~ + x ,\r\n                        aes(label = paste(..eq.label.., ..rr.label.., sep = \"~~~\")), \r\n                        parse = TRUE) +\r\n  geom_vline(xintercept = 2011, linetype = \"dashed\", color = \"gray\") +\r\n  scale_color_brewer(palette    = \"Dark2\"\r\n                     ,direction = -1\r\n                     ,labels    = snakecase::to_title_case\r\n  ) +\r\n  labs(\r\n    title    = \"Percentage of Diagnosed Diabetes in Adults (18+) \\nby State and Region\"\r\n    ,x       = NULL\r\n    ,y       = NULL\r\n    ,color   = \"Region\"\r\n    ,caption = \"Regions from US Census Bureau\"\r\n  ) \r\n\r\ns_g1\r\n\r\n\r\n\r\n\r\nThe above graph shows diabetes prevalence trends by state, grouped into regions based on the US Census classification regions. While all regions of the United states show positive growth in diabetes prevalence, the south exhibits a slightly higher growth rate, as well as the highest prevalence.\r\n\r\n\r\ns_g2 <- state_map %>% \r\n  st_drop_geometry() %>% \r\n  filter(region == \"south\") %>% \r\n  mutate_at(\"id\", ~snakecase::to_title_case(.)) %>% \r\n  ggplot(aes(x = year, y = percentage)) +\r\n  geom_line(aes(group = id ),na.rm = TRUE, color= \"#D95F02\") +\r\n  gghighlight::gghighlight(id == \"North Carolina\", label_params = list(vjust = 3)) +\r\n  scale_y_continuous(breaks = seq(5,13,2)) +\r\n  scale_x_continuous(minor_breaks = seq(2000,2016,1)) +\r\n  labs(\r\n    title    = \"Percentage of Diagnosed Diabetes in Adults (18+) \\nSouth Region\"\r\n    ,x       = NULL\r\n    ,y       = NULL\r\n    ,caption = \"Regions from US Census Bureau\"\r\n  ) +\r\n  theme()\r\n\r\ns_g2\r\n\r\n\r\n\r\n\r\nWhen focusing on the south region, North Carolina falls close to the middle of diabetes prevalence.\r\nOverall - North Carolina\r\nWhen examining the trajectory for North Carolina, we can see that it has been consistently higher than national average . We see that in 2016 there was a large spike in diagnosed cases; unfortunately this is the last available year so it is unclear whether the upward trend continues. The graph below compares state-level average to the national average. Notice that the trend line is slightly higher than in the previous graphs: this is due to the age cut offs used for National and State level data vs County Level data. Previous data used 18 years of age as a cutoff for classifying adults, whereas the county level data uses 20. Due to removing 18- and 19-year-olds from the population, who typically have less diagnosed cases of diabetes than those of older ages, the computed prevalence increases slightly.\r\n\r\n\r\nd1 <- nc_diabetes_data %>% \r\n  group_by(year) %>% \r\n  summarise(\r\n    pct = mean(percentage)\r\n    ,us_pct = mean(us_pct)\r\n  ) %>% \r\n  pivot_longer(\r\n    cols       = c(\"pct\", \"us_pct\")\r\n    ,names_to  = \"metric\"\r\n    ,values_to = \"values\"\r\n  ) %>% \r\n  mutate(\r\n    metric = factor(metric\r\n                    ,levels = c(\"pct\",\"us_pct\")\r\n                    ,labels = c(\"NC\", \"National\"))\r\n  )\r\n\r\nnc_g1 <- d1 %>% \r\n  ggplot(aes(x = year, y = values, color = metric)) +\r\n  geom_line() +\r\n  geom_point(shape = 21, size = 3) +\r\n  geom_vline(xintercept = 2011, linetype = \"dashed\", color = \"gray\") +\r\n  scale_y_continuous(labels = function(x) paste0(x, \"%\")) +\r\n  scale_color_brewer(palette = \"Dark2\") +\r\n  labs(\r\n    x      = NULL\r\n    ,y     = NULL\r\n    ,color = NULL\r\n    ,title = \"Percent of Adults (20+) with Diagnosed Diabetes\"\r\n  )\r\n\r\nnc_g1 \r\n\r\n\r\n\r\n\r\nWe see a spike in 2016, the last year for which the data are available. However, we should be careful with our interpretation of this pattern, because the examination of the county-level trajectories reveals an aberration in the trend that requires a more rigorous investigation.\r\n\r\n\r\nnc_g1a <- nc_diabetes_data %>% \r\n  ggplot(aes(x = year, y = percentage)) +\r\n  geom_line(aes(group = county),alpha = 0.4) +\r\n  labs(\r\n    x = NULL\r\n    ,y = NULL\r\n    ,color = NULL\r\n  )\r\n\r\nnc_g1a\r\n\r\n\r\n\r\n\r\nWhile all of North Carolina has a higher prevalence than the national average, rural counties have systematically higher prevalence of diabetes than urban counties. Note that after 2011 both Urban and Rural counties break the upward trend exhibited in the previous 5 years. This could be explained by the addition of cell phones to the BRFS Survey as many rural areas are often lower income areas and may only rely on a cell phone for communication. As mentioned previously there is an odd spike in case in 2016 that can’t be explained by current documentation. For the purpose of this evaluation 2016 will be excluded from the county level data since the odd trend can not be explained and no further data is available to determine if this is a real spike or could be attributed to methodology change or data quality.\r\n\r\n\r\nd2 <- nc_diabetes_data %>% \r\n  select(-us_pct) %>% \r\n  mutate(\r\n    pct_rural  = if_else(rural == TRUE, percentage, NULL)\r\n    ,pct_urban = if_else(rural == FALSE, percentage, NULL)\r\n  ) %>% \r\n  select(-countyfips,-percentage) %>% \r\n  group_by(year) %>% \r\n  summarise(\r\n    pct_rural = mean(pct_rural,na.rm = TRUE)\r\n    ,pct_urban = mean(pct_urban,na.rm = TRUE)\r\n  ) %>% left_join(us_diabetes_data) %>% \r\n  pivot_longer(\r\n    cols       = c(\"us_pct\", \"pct_rural\",\"pct_urban\")\r\n    ,names_to  = \"metric\"\r\n    ,values_to = \"value\"\r\n    ,values_drop_na = TRUE\r\n  ) %>% \r\n  mutate(\r\n    metric = factor(metric,\r\n                    levels  = c(\"pct_rural\",\"pct_urban\",\"us_pct\")\r\n                    ,labels = c(\"Rural\",\"Urban\",\"US\")\r\n    )\r\n  )\r\n\r\nnc_g2 <- d2 %>% ggplot(aes(x = year, y = value, color = metric)) +\r\n  geom_line() +\r\n  geom_point(shape = 21, size = 3) +\r\n  geom_vline(xintercept = 2011, linetype = \"dashed\", color = \"gray\") +\r\n  scale_y_continuous(labels = function(x) paste0(x, \"%\")) +\r\n  scale_color_brewer(palette = \"Dark2\") +\r\n  labs(\r\n    x      = NULL\r\n    ,y     = NULL\r\n    ,color = NULL\r\n    ,title = \"Percent of Adults (20+) with Diagnosed Diabetes \\nDisplaying Rural vs Urban\"\r\n  )\r\n\r\nnc_g2\r\n\r\n\r\n\r\n\r\nBy County - Geographical\r\nCounty level data first became available in 2004, three years of data is used to arrive at these estimates. For example, the 2006 estimates were computed using the data from 2005, 2006, and 2007 BRFS survey rounds. The county-level estimates were based on indirect model-dependent estimates using Bayesian multilevel modeling techniques(Barker et al., 2013; JNK, 2003 ). This model-dependent approach employs a statistical model that “borrows strength” in making an estimate for one county from BRFSS data collected in other counties and states. Multilevel Binomial regression models with random effects of demographic variables (age 20-44, 45-64, >=65; race/ethnicity; sex) at the county-level were developed. Estimates were adjusted for age to the 2000 US standard population using age groups of 20-44, 45-64, and 65 or older(Klein & Schoenborn, 2001).\r\n\r\n\r\ng50 <- nc_diabetes_data %>% \r\n  filter(year < 2015) %>% \r\n  mutate(\r\n    rural = factor(rural\r\n                   ,levels = c(TRUE,FALSE)\r\n                   ,labels = c(\"Rural\", \"Urban\")\r\n    )\r\n  ) %>% \r\n  ggplot(aes(x = year, y = percentage, color = rural)) +\r\n  geom_line(aes(group = county),alpha = 0.3) +\r\n  geom_smooth(aes(group = rural), method = \"loess\", se= FALSE, size = 1.1) +\r\n  scale_color_brewer(palette = \"Dark2\") +\r\n  labs(\r\n    title = \"Percent of Adults (20+) with Diagnosed Diabetes \\nAll North Carolina Counties\"\r\n    ,x = NULL\r\n    ,y = NULL\r\n    ,color = NULL\r\n  )\r\n\r\ng50\r\n\r\n\r\n\r\n\r\nWhen viewing all county trend lines together, we see that the loess line for both urban and rural follows a similar trend for the time period.\r\nThe following graphs displays the total estimated prevalence of Diabetes in each off the 100 North Carolina counties. To keep the scaling consistent between the graphs, we binned the estimates into 6 intervals of the same size. Rural counties are highlighted with a stronger border line as well as a letter “R” in respective geographic centers. These graphs allow us to view geographical clusters of diabetes prevalence.\r\n\r\n\r\nnc_counties_map_binned <- nc_counties_map %>% \r\n  filter(year < 2015) %>% \r\n  mutate(\r\n    bin = dlookr::binning(.$percentage, nbins = 6 ,type = \"equal\")\r\n    ,bin = forcats::fct_recode(bin\r\n                               ,\"6.5   - 7.9\"  =  \"[6.5,7.97]\"\r\n                               ,\"8.0  - 9.4\" =  \"(7.97,9.43]\" \r\n                               ,\"9.5  - 10.9\" =  \"(9.43,10.9]\" \r\n                               ,\"11.0 - 12.4\" =  \"(10.9,12.4]\"\r\n                               ,\"12.5 - 13.8\" =  \"(12.4,13.8]\"  \r\n                               ,\"13.9 - 15.3\" =  \"(13.8,15.3]\"\r\n    )\r\n  )\r\n\r\nc_g1 <- nc_counties_map_binned %>% \r\n  filter(year %in% c(2006,2014)) %>% \r\n  ggplot() +\r\n  geom_sf() + #blank geom_sf keeps gridlines from overlapping map\r\n  geom_sf(aes(fill = bin,color = rural)) +\r\n  geom_sf(data = nc_cities) +\r\n  ggrepel::geom_text_repel(data = nc_cities, \r\n                           aes(x = long, y = lat, label = city)\r\n                           ,nudge_y = c(-1,1,1,-1,1)\r\n                           ,nudge_x = c(0,0,0,-1,0)\r\n  ) +\r\n  geom_text(data = . %>% filter(rural == TRUE)\r\n            ,aes(x = center_long, y = center_lat)\r\n            ,label = \"R\"\r\n            ,color = \"#696969\"\r\n  ) +\r\n  coord_sf(xlim = c(-84.5,-75.5), ylim = c(33.75,37)) +\r\n  facet_wrap(~year) +\r\n  scale_fill_viridis_d(alpha = 0.6, direction = -1) +\r\n  scale_color_manual(\r\n    values = c(\r\n      \"FALSE\" = \"gray\"\r\n      ,\"TRUE\" = \"black\"\r\n    ),guide = 'none') +\r\n  labs(\r\n    title = \"Estimated Diabetes in Adults (20+) by County\"\r\n    ,fill = \"Percentage\"\r\n    ,y    = NULL\r\n    ,x    = NULL\r\n  ) +\r\n  theme(\r\n    panel.background = element_rect(fill = \"aliceblue\")\r\n    ,panel.grid.major = element_line(color = \"#D4D4D4\", linetype = \"dashed\", \r\n                                     size = 0.5)\r\n    ,legend.position = \"bottom\"\r\n    ,plot.title = element_text(hjust = 0.5)\r\n  )\r\n\r\nc_g1\r\n\r\n\r\n\r\n\r\nThe following box plot displays the distribution of estimated cases by county from 2006 to 2014. For all years of current data the mean of rural counties is higher then that of their Urban counterparts.\r\n\r\n\r\nc_g1c <- nc_counties_map %>% \r\n  mutate(\r\n    rural = factor(rural\r\n                   ,levels = c(TRUE,FALSE)\r\n                   ,labels = c(\"Rural\", \"Urban\")\r\n    )) %>% \r\n  filter(year < 2015) %>%\r\n  ggplot(aes(x = year, y = percentage, group = interaction(year,rural), fill = rural)) +\r\n  geom_boxplot(alpha = 0.5) +\r\n  scale_fill_brewer(palette = \"Dark2\") +\r\n  scale_x_continuous(breaks = seq(2004,2014,2)) +\r\n  labs(\r\n    x      = NULL\r\n    ,y     = NULL\r\n    ,fill  = NULL\r\n    ,title = \"Distribution  of Estimated Cases by County 2006 - 2014\"\r\n  )\r\n\r\nc_g1c\r\n\r\n\r\n\r\n\r\nBy County - Percent Change\r\nThe following graphs display the overall change in estimated prevalence between 2006 to 2014.\r\n\r\n\r\nd3 <- nc_counties_map %>% \r\n  st_drop_geometry() %>% \r\n  filter(year %in% c(2006,2014)) %>% \r\n  select(-countyfips,-us_pct) %>% \r\n  pivot_wider(names_from = \"year\"\r\n              ,values_from = \"percentage\") %>% \r\n  mutate(\r\n    pct_p  = `2014` - `2006`\r\n    ,pct_c = ((`2014` - `2006`)/`2006`) * 100\r\n  ) %>% \r\n  left_join(nc_counties_map_raw) %>% \r\n  st_as_sf()\r\n\r\n\r\nc_g4 <- d3 %>% \r\n  ggplot() +\r\n  geom_sf() + #blank geom_sf keeps gridlines from overlapping map\r\n  geom_sf(aes(fill = pct_c ,color = rural)) +\r\n  geom_sf(data = nc_cities) +\r\n  ggrepel::geom_text_repel(data = nc_cities, \r\n                           aes(x = long, y = lat, label = city)\r\n                           ,nudge_y = c(-1,1,1,-1,1)\r\n                           ,nudge_x = c(0,0,0,-1,0)\r\n  ) +\r\n  geom_text(data = . %>% filter(rural == TRUE)\r\n            ,aes(x = center_long, y = center_lat)\r\n            ,label = \"R\"\r\n            ,color = \"#696969\"\r\n  ) +\r\n  # scale_fill_viridis_c(alpha = 0.6, direction = -1) +\r\n  scale_fill_gradient2(\r\n    low = \"#d01c8b\"\r\n    ,mid = \"#f7f7f7\"\r\n    ,high = \"#4dac26\"\r\n    ,midpoint = 0\r\n  ) +\r\n  scale_color_manual(\r\n    values = c(\r\n      \"FALSE\" = \"gray\"\r\n      ,\"TRUE\" = \"black\"\r\n    ),guide = 'none') +\r\n  labs(\r\n    title = \"Percentage Change of Diagnosed Diabetes 2006-2014\"\r\n    ,fill = \"Percentage\"\r\n    ,y    = NULL\r\n    ,x    = NULL\r\n  ) +\r\n  theme(\r\n    panel.background = element_rect(fill = \"aliceblue\")\r\n    ,panel.grid.major = element_line(color = \"#D4D4D4\", linetype = \"dashed\", \r\n                                     size = 0.5)\r\n  )\r\n\r\nc_g4\r\n\r\n\r\n\r\n\r\nThe following chart displays the density curve of the percentage change for both rural and urban counties. It is notable that the mean of change for Urban counties is actually higher than the mean for rural counties. However, we also see that most change for both regions is positive growth. In fact only 16 rural, and 10 Urban counties experienced negative change in the given time frame. While 35 rural and 34 urban counties experience growth in the same period.\r\n\r\n\r\nd4 <- d3 %>% \r\n  st_drop_geometry() %>% \r\n  mutate(\r\n    rural = factor(rural\r\n                   ,levels = c(TRUE,FALSE)\r\n                   ,labels = c(\"Rural\", \"Urban\")\r\n    )\r\n  )\r\n\r\n\r\nmean_d4 <- d4 %>% \r\n  group_by(rural) %>% \r\n  summarise(.groups = \"keep\"\r\n            ,pct_c = mean(pct_c)\r\n  )\r\n\r\ng51 <-  d4 %>% \r\n  ggplot(aes(x = pct_c, fill = rural, y = ..density.., color = rural)) +\r\n  geom_histogram(binwidth = 5, position = \"identity\", alpha = 0.3) +\r\n  geom_density(alpha = 0.5) +\r\n  facet_wrap(~rural, ncol = 1)  +\r\n  geom_vline(aes(xintercept = pct_c), data = mean_d4) +\r\n  geom_text(aes(x = pct_c, y = 0.038, label = round(pct_c, 2))\r\n            ,data  = mean_d4\r\n            ,hjust = -0.15\r\n            ,size  = 5\r\n            ,color = \"#000000\") +\r\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"#696969\") +\r\n  scale_color_brewer(palette = \"Dark2\", guide = NULL) +\r\n  scale_fill_brewer(palette = \"Dark2\", guide = NULL) +\r\n  labs(\r\n    x = \"Percentage Change\"\r\n    ,y = \"Density\"\r\n    ,fill = NULL\r\n  )\r\ng51\r\n\r\n\r\n\r\n\r\nConclusion and Next Steps\r\nThe original hypothesis of this report was that rural counties were growing at a higher rate then there urban counterparts. Through out this post it has been shown that this hypothesis is incorrect, just being a rural county does not indicate diabetes growth, in fact the growth rate throughout North Carolina has been consistent. Further posts will explore other reasons for these trends, as the current post merely explores the trends and differences using data visualizations, a more rigorous and formal evaluation of these comparison is in order.\r\nSession information\r\n===========================================================================\r\nFor the sake of documentation and reproducibility, the current report was rendered in the following environment. Click the line below to expand.\r\n\r\nEnvironment \r\n\r\n\r\nif( requireNamespace(\"devtools\", quietly = TRUE) ) {\r\n  devtools::session_info()\r\n} else {\r\n  sessionInfo()\r\n} \r\n\r\n\r\n- Session info -----------------------------------------------------\r\n setting  value                       \r\n version  R version 4.0.2 (2020-06-22)\r\n os       Windows 10 x64              \r\n system   x86_64, mingw32             \r\n ui       RTerm                       \r\n language (EN)                        \r\n collate  English_United States.1252  \r\n ctype    English_United States.1252  \r\n tz       America/New_York            \r\n date     2020-12-28                  \r\n\r\n- Packages ---------------------------------------------------------\r\n package      * version  date       lib\r\n abind          1.4-5    2016-07-21 [1]\r\n assertthat     0.2.1    2019-03-21 [1]\r\n backports      1.1.10   2020-09-15 [1]\r\n base64enc      0.1-3    2015-07-28 [1]\r\n bit            4.0.4    2020-08-04 [1]\r\n bit64          4.0.5    2020-08-30 [1]\r\n blob           1.2.1    2020-01-20 [1]\r\n broom          0.7.0    2020-07-09 [1]\r\n callr          3.4.4    2020-09-07 [1]\r\n car            3.0-10   2020-09-29 [1]\r\n carData        3.0-4    2020-05-22 [1]\r\n cellranger     1.1.0    2016-07-27 [1]\r\n checkmate      2.0.0    2020-02-06 [1]\r\n chron          2.3-56   2020-08-18 [1]\r\n class          7.3-17   2020-04-26 [2]\r\n classInt       0.4-3    2020-04-07 [1]\r\n cli            2.0.2    2020-02-28 [1]\r\n cluster        2.1.0    2019-06-19 [2]\r\n colorspace     1.4-1    2019-03-18 [1]\r\n corrplot       0.84     2017-10-16 [1]\r\n crayon         1.3.4    2017-09-16 [1]\r\n curl           4.3      2019-12-02 [1]\r\n data.table     1.13.0   2020-07-24 [1]\r\n DBI            1.1.0    2019-12-15 [1]\r\n desc           1.2.0    2018-05-01 [1]\r\n devtools       2.3.2    2020-09-18 [1]\r\n digest         0.6.25   2020-02-23 [1]\r\n distill        1.1.2    2020-12-28 [1]\r\n dlookr         0.3.14   2020-11-17 [1]\r\n DMwR           0.4.1    2013-08-08 [1]\r\n downlit        0.2.1    2020-11-04 [1]\r\n dplyr        * 1.0.2    2020-08-18 [1]\r\n e1071          1.7-4    2020-10-14 [1]\r\n ellipsis       0.3.1    2020-05-15 [1]\r\n evaluate       0.14     2019-05-28 [1]\r\n fansi          0.4.1    2020-01-08 [1]\r\n farver         2.0.3    2020-01-16 [1]\r\n forcats        0.5.0    2020-03-01 [1]\r\n foreign        0.8-80   2020-05-24 [2]\r\n Formula        1.2-4    2020-10-16 [1]\r\n fs             1.5.0    2020-07-31 [1]\r\n generics       0.0.2    2018-11-29 [1]\r\n gghighlight    0.3.0    2020-03-29 [1]\r\n ggplot2      * 3.3.2    2020-06-19 [1]\r\n ggpmisc        0.3.7    2020-11-09 [1]\r\n ggrepel        0.8.2    2020-03-08 [1]\r\n glue           1.4.2    2020-08-27 [1]\r\n gridExtra      2.3      2017-09-09 [1]\r\n gsubfn         0.7      2018-03-16 [1]\r\n gtable         0.3.0    2019-03-25 [1]\r\n haven          2.3.1    2020-06-01 [1]\r\n Hmisc          4.4-2    2020-11-29 [1]\r\n hms            0.5.3    2020-01-08 [1]\r\n htmlTable      2.1.0    2020-09-16 [1]\r\n htmltools      0.5.0    2020-06-16 [1]\r\n htmlwidgets    1.5.1    2019-10-08 [1]\r\n httr           1.4.2    2020-07-20 [1]\r\n inum           1.0-1    2019-04-25 [1]\r\n jpeg           0.1-8.1  2019-10-24 [1]\r\n kableExtra     1.2.1    2020-08-27 [1]\r\n KernSmooth     2.23-17  2020-04-26 [2]\r\n knitr          1.30     2020-09-22 [1]\r\n labeling       0.3      2014-08-23 [1]\r\n lattice        0.20-41  2020-04-02 [2]\r\n latticeExtra   0.6-29   2019-12-19 [1]\r\n libcoin        1.0-6    2020-08-14 [1]\r\n lifecycle      0.2.0    2020-03-06 [1]\r\n magrittr     * 2.0.1    2020-11-17 [1]\r\n mapdata      * 2.3.0    2018-03-30 [1]\r\n maps         * 3.3.0    2018-04-03 [1]\r\n MASS           7.3-51.6 2020-04-26 [2]\r\n Matrix         1.2-18   2019-11-27 [2]\r\n memoise        1.1.0    2017-04-21 [1]\r\n mgcv           1.8-31   2019-11-09 [2]\r\n mice           3.12.0   2020-11-14 [1]\r\n munsell        0.5.0    2018-06-12 [1]\r\n mvtnorm        1.1-1    2020-06-09 [1]\r\n nlme           3.1-148  2020-05-24 [2]\r\n nnet           7.3-14   2020-04-26 [2]\r\n nortest        1.0-4    2015-07-30 [1]\r\n openxlsx       4.2.2    2020-09-17 [1]\r\n partykit       1.2-11   2020-12-09 [1]\r\n pillar         1.4.6    2020-07-10 [1]\r\n pkgbuild       1.1.0    2020-07-13 [1]\r\n pkgconfig      2.0.3    2019-09-22 [1]\r\n pkgload        1.1.0    2020-05-29 [1]\r\n plyr           1.8.6    2020-03-03 [1]\r\n png            0.1-7    2013-12-03 [1]\r\n polynom        1.4-0    2019-03-22 [1]\r\n prettydoc      0.4.0    2020-08-10 [1]\r\n prettyunits    1.1.1    2020-01-24 [1]\r\n processx       3.4.4    2020-09-03 [1]\r\n proto          1.0.0    2016-10-29 [1]\r\n ps             1.3.4    2020-08-11 [1]\r\n purrr          0.3.4    2020-04-17 [1]\r\n quantmod       0.4.18   2020-12-09 [1]\r\n R6             2.4.1    2019-11-12 [1]\r\n RcmdrMisc      2.7-1    2020-08-13 [1]\r\n RColorBrewer   1.1-2    2014-12-07 [1]\r\n Rcpp           1.0.5    2020-07-06 [1]\r\n readr        * 1.3.1    2018-12-21 [1]\r\n readxl         1.3.1    2019-03-13 [1]\r\n remotes        2.2.0    2020-07-21 [1]\r\n reshape2       1.4.4    2020-04-09 [1]\r\n rio            0.5.16   2018-11-26 [1]\r\n rlang          0.4.9    2020-11-26 [1]\r\n rmarkdown      2.6.4    2020-12-28 [1]\r\n ROCR           1.0-11   2020-05-02 [1]\r\n rpart          4.1-15   2019-04-12 [2]\r\n rprojroot      2.0.2    2020-11-15 [1]\r\n RSQLite        2.2.1    2020-09-30 [1]\r\n rstudioapi     0.11     2020-02-07 [1]\r\n rvest          0.3.6    2020-07-25 [1]\r\n sandwich       3.0-0    2020-10-02 [1]\r\n scales         1.1.1    2020-05-11 [1]\r\n sessioninfo    1.1.1    2018-11-05 [1]\r\n sf           * 0.9-6    2020-09-13 [1]\r\n smbinning      0.9      2019-04-01 [1]\r\n snakecase      0.11.0   2019-05-25 [1]\r\n sqldf          0.4-11   2017-06-28 [1]\r\n stringi        1.5.3    2020-09-09 [1]\r\n stringr        1.4.0    2019-02-10 [1]\r\n survival       3.1-12   2020-04-10 [2]\r\n testthat       2.3.2    2020-03-02 [1]\r\n tibble         3.0.3    2020-07-10 [1]\r\n tidyr        * 1.1.2    2020-08-27 [1]\r\n tidyselect     1.1.0    2020-05-11 [1]\r\n tinytex        0.26     2020-09-22 [1]\r\n TTR            0.24.2   2020-09-01 [1]\r\n units          0.6-7    2020-06-13 [1]\r\n usethis        2.0.0    2020-12-10 [1]\r\n vctrs          0.3.4    2020-08-29 [1]\r\n viridisLite    0.3.0    2018-02-01 [1]\r\n webshot        0.5.2    2019-11-22 [1]\r\n withr          2.3.0    2020-09-22 [1]\r\n xfun           0.19     2020-10-30 [1]\r\n xml2           1.3.2    2020-04-23 [1]\r\n xtable         1.8-4    2019-04-21 [1]\r\n xts            0.12.1   2020-09-09 [1]\r\n yaml           2.2.1    2020-02-01 [1]\r\n zip            2.1.1    2020-08-27 [1]\r\n zoo            1.8-8    2020-05-02 [1]\r\n source                            \r\n CRAN (R 4.0.0)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.0)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.0)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n Github (rstudio/distill@0ce08b3)  \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.0)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.0)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n Github (rstudio/rmarkdown@da9791a)\r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.3)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n CRAN (R 4.0.2)                    \r\n\r\n[1] C:/Users/kyleb/Documents/R/win-library/4.0\r\n[2] C:/Program Files/R/R-4.0.2/library\r\n\r\nReferences\r\n\r\n\r\n\r\nAmerican Diabetes Asssociation. (2015). The burden of diabetes in north carolina. http://main.diabetes.org/dorg/PDFs/Advocacy/burden-of-diabetes/north-carolina.pdf\r\n\r\n\r\nBarker, L. E., Thompson, T. J., Kirtland, K. A., Boyle, J. P., Geiss, L. S., McCauley, M. M., & Albright, A. L. (2013). Bayesian small area estimates of diabetes incidence by united states county, 2009. Journal of Data Science, 11(1), 269–280. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4537395/\r\n\r\n\r\nCenters for Disease Control and Prevention. (2020). National diabetes statistics report. US Department of Health and Human Services. https://www.cdc.gov/diabetes/pdfs/data/statistics/national-diabetes-statistics-report.pdf\r\n\r\n\r\nJNK, R. (2003). Small area estimation. https://onlinelibrary.wiley.com/doi/pdf/10.1002/0471722189.fmatter\r\n\r\n\r\nKlein, R. J., & Schoenborn, C. A. (2001). Age adjustment using the 2000 projected u.s. Population. Healthy People 2000 Stat Notes, 20, 1–9.\r\n\r\n\r\nPierannunzi, C., Town, M., Garvin, W., Shaw, F. E., & Balluz, L. (2012). Methodologic changes in the behavioral risk factor surveillance system in 2011 and potential effects on prevalence estimates. Morbidity and Mortality Weekly Report, 61(22), 410–413. https://www.cdc.gov/mmwr/pdf/wk/mm6122.pdf\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-28-diabetes-in-rural-north-carolina-exploring-prevalence-trends/diabetes-in-rural-north-carolina-exploring-prevalence-trends_files/figure-html5/o-g1-1.png",
    "last_modified": "2020-12-28T22:31:49-05:00",
    "input_file": "diabetes-in-rural-north-carolina-exploring-prevalence-trends.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-12-28-basic-exploration-of-who-tuberculosis-data/",
    "title": "Basic Exploration of WHO Tuberculosis Data",
    "description": "Today I am going to dive into some real life data from the World Health Organization (WHO), exploring new and relapse cases of Tuberculosis.  I clean up the data, and then make a few graphs to explore different variables.",
    "author": [
      {
        "name": "Kyle Belanger",
        "url": {}
      }
    ],
    "date": "2020-02-13",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nTL:DR\r\nLoad Packages\r\nLoad in Data\r\nTransform\r\nJoin Data\r\nAnalyze\r\nSubset\r\nA different way to look\r\nFurther Exploration\r\n\r\nLast Exploration\r\n\r\nNext Steps\r\n\r\nTL:DR\r\nToday I am going to dive into some real life data from the World Health Organization (WHO), exploring new and relapse cases of Tuberculosis. I clean up the data, and then make a few graphs to explore different variables.\r\nLoad Packages\r\nSince I am going to use quite a few packages in the tidyverse I am going to load them all in at once instead of individually.\r\n\r\n\r\nlibrary(tidyverse)\r\n\r\n\r\n\r\nLoad in Data\r\nWe are using the WHO data set which contains tuberculosis (TB) cases broken down by year, this data set is contained in the Tidyr package, however its only recent up to 2014. For a little added fun I have downloaded the latest data from the WHO website, Found here. For some added fun I have also included GDP per Capita data from World bank Found here\r\n\r\n\r\nwho_raw <-  read.csv(\"TB_notifications_2020-02-11.csv\")\r\n\r\n#GPD file contains 4 rows of instrusctions above the actually data, we can tell\r\n#read.csv to skip these using the skip command\r\ngpd_raw <-  read.csv(\"API_NY.GDP.PCAP.CD_DS2_en_csv_v2_713080.csv\",\r\n                     skip = 4)\r\n\r\n\r\n\r\nTransform\r\nThis data set is very ugly looking! The first 3 columns are all country Identifiers, with column four indicating the WHO region. This is redundant and can be dropped down to one Identifier and Region. As we can see there are quite a few Variable columns that are in fact values and not true Variables. When reading the data dictionary for this data set, WHO has changed their reporting over the years, so for our purposes we can strip a lot of the extra data out. Lets try and look at three types of TB, Extrapulmonary, Lab Diagnosed, and Clinician Diagnosed. As well as try and look at the breakdowns by Age and Sex of new and relapse case (post 2012) Lots of Cleaning to do, lets get to it!\r\n\r\n\r\nwho1 <- who_raw %>% \r\n  #lets drop some columns not needed for our exploration, what each column means can be found in the CSV Data dictionary file\r\n  select(-iso2\r\n         ,-iso_numeric\r\n         ,-(rdx_data_available:hiv_reg_new2)\r\n         ,-(new_sp:rel_in_agesex_flg)\r\n         ) %>%\r\n  #Lets just look at new date\r\n  filter(year >= 2013) %>% \r\n  #Move the values that are currently stored as variables to observations\r\n  pivot_longer(cols = newrel_m04:newrel_sexunkageunk\r\n               ,names_to = \"key\"\r\n               ,values_to = \"values\"\r\n              ) %>% \r\n  separate(col = key\r\n           ,into = c(\"new\",\"sexage\")\r\n          ,sep = \"_\"\r\n          )  %>% \r\n  #the data set contains male, female and unknown\r\n  mutate_if(is.character\r\n            ,str_replace_all\r\n            ,pattern = \"sexunk\"\r\n            , replacement = \"u\"\r\n            ) %>% \r\n  separate(col = sexage\r\n           ,into = c(\"sex\",\"age\")\r\n           ,sep = 1) %>% \r\n  mutate(age_start = case_when(\r\n    str_detect(age, \"65\") ~ \"65\"\r\n    ,(str_length(age) == 2) ~ str_match(age, \"\\\\S\")\r\n    ,(str_length(age) == 3) ~ str_match(age, \"\\\\S\")\r\n    ,(str_length(age) == 4) ~ str_match(age, \"\\\\S\\\\S\")\r\n    \r\n    ,TRUE ~ \"\"\r\n    )\r\n    ,age_end = case_when(\r\n      str_detect(age, \"65\") ~ \"& Over\"\r\n      ,(str_length(age) == 2) ~ str_match(age, \"\\\\S$\")\r\n    ,(str_length(age) == 3) ~ str_match(age, \"\\\\S\\\\S$\")\r\n    ,(str_length(age) == 4) ~ str_match(age, \"\\\\S\\\\S$\")\r\n    ,TRUE ~ \"\"\r\n    ))\r\n\r\n#overall  WHO data is now cleaned and tidy.  \r\n  \r\n# Lets tidy up the GPD data so we can match it to our WHO data set\r\ngdp1 <- gpd_raw %>% \r\n  select(-(Indicator.Name:X2012)\r\n         ,-X2019\r\n         ,-X) %>% \r\n  pivot_longer(cols = X2013:X2018\r\n               ,names_to  = \"year\" \r\n               ,values_to = \"gdp\") %>% \r\n  mutate_if(is.character\r\n            ,str_remove_all\r\n            ,pattern = \"X(?=\\\\d*)\")  # regex to check for an X followed by a digit\r\n\r\n\r\n\r\nJoin Data\r\nLets combine the data sets so we can later visual TB Cases based on a countries GDP per capita.\r\n\r\n\r\nwho_combined <- who1 %>% \r\n  rename(Country.Code = iso3) %>% \r\n  mutate(year = as.character(year)) %>% \r\n  left_join(y = gdp1) %>% \r\n  select(-Country.Name)\r\n\r\n\r\n\r\nAnalyze\r\nLets first explore 2018 and see if GDP has any affect on the amount of TB cases in a particular country.\r\n\r\n\r\ng1 <- who_combined %>% \r\n  filter(str_detect(age,\"014|15plus|u\"),year == 2018) %>% \r\n  group_by(country) %>% \r\n  summarise(sum_tb_cases = (sum(values,na.rm = TRUE)/10000)\r\n            ,gdp = first(gdp)/1000\r\n            ,who_region = first(g_whoregion)) %>% \r\n  mutate(\r\n         label = ifelse((sum_tb_cases>50), yes = as.character(country),no = \"\")) %>% \r\n  ggplot(aes(x = gdp, y = sum_tb_cases )) +\r\n  geom_point(aes(color = who_region)) +\r\n  ggrepel::geom_text_repel(aes(x = gdp, y = sum_tb_cases, label = label)) +\r\n  labs(\r\n    title = \"Total TB Cases by Country compared to Gross Domestic Product (GDP)\"\r\n    ,x = \"GDP (per 1,000USD)\"\r\n    ,y = \"Total TB Case (per 10,000 cases)\"\r\n    ,color = \"WHO Region\"\r\n    ) +\r\n  theme_bw() \r\ng1\r\n\r\n\r\n\r\n\r\nSubset\r\nLets subset the above data to remove some of the outliers.\r\n\r\n\r\ng2 <- who_combined %>% \r\n  filter(str_detect(age,\"014|15plus|u\"),year == 2018) %>% \r\n  group_by(country) %>% \r\n  summarise(sum_tb_cases = (sum(values,na.rm = TRUE)/10000)\r\n            ,gdp = first(gdp)/1000\r\n            ,who_region = first(g_whoregion)) %>% \r\n  mutate(\r\n         label = ifelse((sum_tb_cases>50), yes = as.character(country),no = \"\")) %>% \r\n  ggplot(aes(x = gdp, y = sum_tb_cases )) +\r\n  geom_point(aes(color = who_region)) +\r\n  ggrepel::geom_text_repel(aes(x = gdp, y = sum_tb_cases, label = label)) +\r\n  labs(\r\n    title = \"Total TB Cases by Country compared to Gross Domestic Product (GDP)\"\r\n    ,x = \"GDP (per 1,000USD)\"\r\n    ,y = \"Total TB Case (per 10,000 cases)\"\r\n    ,color = \"WHO Region\"\r\n    ) +\r\n  xlim(0,50) +\r\n  ylim(0,50) +\r\n  theme_bw() \r\n\r\ng2\r\n\r\n\r\n\r\n\r\nWe can see in the graph above there seems to be a small correlation between lower GDP and amount of TB cases.\r\nA different way to look\r\nCould there be any correlation between a countries population and the amount of TB cases? Maybe its just as simple as having more people means more people to get sick? Lets bring in another data set, again from World Bank Found Here, this contains total population data by country.\r\n\r\n\r\npop_raw <-  read.csv(\"API_SP.POP.TOTL_DS2_en_csv_v2_713131.csv\"\r\n                     ,skip = 4)\r\n#If this looks famialer its because it is, the data set looks very simalar to the GDP data\r\n#In the future this could be moved to a function to allow cleaning much easier\r\npop1 <- pop_raw %>% \r\n  select(-(Indicator.Name:X2012)\r\n         ,-X2019\r\n         ,-X) %>% \r\n  pivot_longer(cols = X2013:X2018\r\n               ,names_to  = \"year\" \r\n               ,values_to = \"population\") %>% \r\n  mutate_if(is.character\r\n            ,str_remove_all\r\n            ,pattern = \"X(?=\\\\d*)\")\r\n\r\n#now lets combine this into are overall data set\r\n\r\nwho_combined <- who_combined %>% \r\n  mutate(year = as.character(year)) %>% \r\n  left_join(y = pop1) %>% \r\n  select(-Country.Name)\r\n\r\n#now lets Graph again\r\n\r\ng3 <- who_combined %>% \r\n  filter(str_detect(age,\"014|15plus|u\"),year == 2018) %>% \r\n  group_by(country) %>% \r\n  summarise(sum_tb_cases = (sum(values,na.rm = TRUE)/10000)\r\n            ,population = first(population)/1000000\r\n            ,who_region = first(g_whoregion)) %>% \r\n  mutate(\r\n         label = ifelse((population>250), yes = as.character(country),no = \"\")) %>%\r\n  ggplot(aes(x = population, y = sum_tb_cases )) +\r\n  geom_point(aes(color = who_region)) +\r\n  ggrepel::geom_text_repel(aes(x = population, y = sum_tb_cases, label = label)) +\r\n  labs(\r\n    title = \"Total TB Cases by Country compared to Gross Domestic Product (GDP)\"\r\n    ,x = \"Population (in Millions)\"\r\n    ,y = \"Total TB Case (per 10,000 cases)\"\r\n    ,color = \"WHO Region\"\r\n    ) +\r\n  theme_bw() \r\n\r\n g3 \r\n\r\n\r\n\r\n\r\nFurther Exploration\r\nMaybe we are on to something, the more people, the more likely they are to get sick! However India seems to have a very large number of cases so lets break these cases down further by age group for 2018.\r\n\r\n\r\ng4 <- who_combined %>% \r\n  filter(year == 2018\r\n         ,country == \"India\"\r\n         ,!(str_detect(age,\"15plus|ageunk|u|014\"))\r\n         ,(str_detect(sex,\"m|f\"))\r\n         )  %>% \r\n  mutate(age_range = glue::glue(\"{age_start} -- {age_end}\")) %>% \r\n  ggplot(aes(x = reorder(age_range, as.numeric(age_start)), y = (values/1000), fill = sex)) +\r\n  geom_col(position = \"dodge\") +\r\n  labs(\r\n    title = \"TB Case in India by age and gender 2018\"\r\n    ,x    = NULL\r\n    ,y    = \"Total Cases (per 1000)\"\r\n    ,fill = \"Gender\") +\r\n  scale_fill_manual(labels = c(\"Female\",\"Male\"), values = c(\"#e9a3c9\",\"#67a9cf\") )\r\n  \r\ng4\r\n\r\n\r\n\r\n\r\nThere seems to be a huge spike in cases after adolescences. Females have a sharp decline the older they get, where as male case stay elevated with a slight decrease at 55.\r\nLast Exploration\r\nLets look at overall cases in India, going back to 1980 and see if there as been any trends. To get these numbers we will go back to our raw data and strip everything out expect the total count\r\n\r\n\r\ng5 <- who_raw %>% \r\n  filter(country == \"India\") %>% \r\n  select(year, c_newinc) %>% \r\n  ggplot(aes(x = year, y = c_newinc/1000000)) +\r\n  geom_line() +\r\n  geom_point() +\r\n  labs(\r\n    title = \"New and Relapse Tuberculosis Cases In India \\n1980 -- 2018\"\r\n    ,x    = NULL\r\n    ,y    = \"Total Cases (in millions)\") +\r\n  theme_bw() +\r\n  theme(plot.title = element_text(hjust = 0.5)) + #center title \r\n  scale_x_continuous(breaks = seq(1980,2020,5)) +\r\n  scale_y_continuous(breaks = scales::pretty_breaks(n=10))  #different way to add tick marks\r\ng5\r\n\r\n\r\n\r\n\r\nCases were steadily rising from 1980 to 1990, then suddenly feel off. Starting in the early 2010s there was a sharp increase and the amount of new and relapse cases just keep growing.\r\nNext Steps\r\nWhile no other country has the amount of cases that India does, the sudden spike in cases at adolescences asks the question do other countries follow this same trend? We can also see the sudden spike in the 2010s, again is this just based in India or do we see this trend in other countries. There is much more exploration we can do with this data set at a later time!\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-28-basic-exploration-of-who-tuberculosis-data/basic-exploration-of-who-tuberculosis-data_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2020-12-28T22:13:15-05:00",
    "input_file": "basic-exploration-of-who-tuberculosis-data.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-12-28-line-graphs-and-interactivity/",
    "title": "Line Graphs and Interactivity",
    "description": "Tableau for Healthcare Chapter 10.  Static and Interactive examples",
    "author": [
      {
        "name": "Kyle Belanger",
        "url": {}
      }
    ],
    "date": "2020-02-10",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nLoad Libraries\r\nImport Data\r\nTransform Data\r\nGGplot\r\nplotly\r\n\r\nToday’s post is all about line graphs using both ggplot for a static graph as well as a package called plotly for interactivity (more on this later). The example graph and data is again coming from Tableau for Healthcare, Chapter 10. \r\nLoad Libraries\r\nAs always first step is to load in our libraries, I am using quite a few here, some are a bit overkill for this example but I wanted to play around with some fun features today.\r\n\r\n\r\nlibrary(magrittr) #pipes\r\nlibrary(ggplot2) #ploting \r\nlibrary(dplyr)  # data manipulation\r\nlibrary(tidyr) # tidy data\r\nlibrary(lubridate) #work with dates\r\nlibrary(stringr) # manipulate strings\r\nlibrary(plotly)\r\n\r\n\r\n\r\nImport Data\r\nNext lets import our data, this week we are using the sheet Flu Occurrence FY2013-2016. I am unsure if this is form a real data set or not but it is good for demonstration purposes! After importing we can glimpse at our data to understand what is contained within.\r\n\r\n\r\nds <- readxl::read_xlsx(path = \"../2020-12-28-my-start-to-r/Tableau 10 Training Practice Data.xlsx\"\r\n                        ,sheet = \"05 - Flu Occurrence FY2013-2016\"\r\n                        )\r\nds %>% glimpse()\r\n\r\n\r\nRows: 48\r\nColumns: 4\r\n$ Date                                         <dttm> 2012-10-27,...\r\n$ `Tests (+) for Influenza (count)`            <dbl> 995, 3228, 2...\r\n$ `Total Respiratory Specimens Tested (count)` <dbl> 18986, 24757...\r\n$ `% Tests (+) for Influenza`                  <dbl> 0.05240704, ...\r\n\r\nTransform Data\r\nI went a bit overboard today with renaming the variables. I wanted to practice writing a function and while it might not be the prettiest or the best way to do this, it worked for what I was trying to accomplish. Note the use of sapply, which lets us run the function on each column name.\r\n\r\n\r\nformat_names <- function(x) {\r\n  #Fucntion to set all names to lower case, and strip unneeded characters\r\n  x <- tolower(x)\r\n  x <- str_replace_all(x,c(#set each pattern equal to replacement\r\n                       \" \"         = \"_\"\r\n                      ,\"\\\\(\\\\+\\\\)\" = \"pos\"  #regualr experssion to match (+)\r\n                      ,\"\\\\(\"       = \"\"\r\n                      ,\"\\\\)\"       = \"\"\r\n                      ,\"\\\\%\"       = \"pct\"\r\n                      )\r\n                  ) \r\n                }\r\n\r\n#run the format name function on all names from DS\r\ncolnames(ds) <- sapply(colnames(ds),format_names)    \r\n\r\n\r\n\r\nNow is were the fun really starts! For this particular data set there are a couple things we need to add to replicate the example. In the original data set the date is stored with month, day, and year; the day is irrelevant and we need to pull out the month as well as the year. For this we can use the lubridate package, first we pull out the month and set it as a factor. For this example our year actually starts in October, so we set our factor to start at October (10), and end with September (9). We then pull out the year, which presents us with a different problem. Again our year starts in October, instead of January. To solve this I have created a variable called date adjustment, in this column is our month is 10 or greater, we will place a 1, if not a 0. We then set our fiscal year to be the actual year plus the date adjustment, this allows us to have our dates in the right fiscal year. Last the percent column is currently listed as a decimal, so we will convert this to a percentage.\r\n\r\n\r\n# split date time\r\nds1 <- ds %>% mutate(\r\n        #create month column, then set factors and labels to start fiscal year in Oct\r\n        month = month(ds$date)\r\n        ,month = factor(month\r\n                        ,levels = c(10:12, 1:9)\r\n                        ,labels = c(month.abb[10:12],month.abb[1:9]))\r\n       ,year = year(ds$date)\r\n        ,date_adjustment = ifelse(month(ds$date) >= 10, 1,0 )\r\n        ,fiscal_year = factor(year + date_adjustment)\r\n        #convert % Pos from decmial to pct\r\n        ,pct_tests_pos_for_influenza = round(pct_tests_pos_for_influenza * 100, digits = 0)\r\n        )\r\n\r\nds1 %>% glimpse()\r\n\r\n\r\nRows: 48\r\nColumns: 8\r\n$ date                                     <dttm> 2012-10-27, 201...\r\n$ tests_pos_for_influenza_count            <dbl> 995, 3228, 22368...\r\n$ total_respiratory_specimens_tested_count <dbl> 18986, 24757, 66...\r\n$ pct_tests_pos_for_influenza              <dbl> 5, 13, 34, 33, 2...\r\n$ month                                    <fct> Oct, Nov, Dec, J...\r\n$ year                                     <dbl> 2012, 2012, 2012...\r\n$ date_adjustment                          <dbl> 1, 1, 1, 0, 0, 0...\r\n$ fiscal_year                              <fct> 2013, 2013, 2013...\r\n\r\nGGplot\r\nThe graph here is pretty straight forward with one exception, group! For this line graph we want ggplot to connect the lines of the same year, if we do not explicitly state this using the group mapping, ggplot will try to connect all the lines together, which of course is not at all what we want!\r\n\r\n\r\ng1 <- ds1 %>% \r\n    ggplot(aes(x = month, y = pct_tests_pos_for_influenza, color = fiscal_year\r\n               ,group = fiscal_year)) +\r\n  geom_line() +\r\n  labs(\r\n    x  = NULL\r\n    ,y = \"% Tests (+) for Influenza\"\r\n    ,color = NULL\r\n    ,title = \"Flu Viral Surveillance: % Respiratory Specimens Positive for Influenza \\nOctober - September \\nFor Flu Seasons 2013 - 2016\"\r\n  ) +\r\n  theme_classic() +\r\n  scale_y_continuous(breaks = seq(0,40,5)) +\r\n  scale_color_manual(values = c(\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"))\r\n\r\ng1\r\n\r\n\r\n\r\n\r\nplotly\r\nOne of the nice features of Tableau is the fact the graphs are interactive, while a good graph should speak for itself, end users love pretty things. I have been experimenting with Plotly, which has an open source package for R (as well as many other programming languages!). This example only just scratches the surface, but there will be many more to come!\r\n\r\n\r\ng2 <- ds1 %>% \r\n    plot_ly(x = ~month, y = ~pct_tests_pos_for_influenza, type = \"scatter\", mode = \"lines\" \r\n            ,color = ~fiscal_year\r\n            ,colors = c(\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\")\r\n            , hoverinfo = 'y') %>% \r\n    layout(xaxis = list(\r\n                        title = \"\"\r\n                    )\r\n           ,yaxis = list(\r\n                        title = \"% Tests (+) for Influenza\"\r\n                    )\r\n           ,title = \"Flu Viral Surveillance: % Respiratory Specimens Positive for Influenza\"\r\n           ,legend = list(\r\n                      x = 100\r\n                      ,y = 0.5\r\n                      )   \r\n           \r\n           )\r\n\r\ng2\r\n\r\n\r\npreserve0ddc9293b1cc8f4f\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-28-line-graphs-and-interactivity/line-graphs-and-interactivity_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2020-12-28T22:08:09-05:00",
    "input_file": "line-graphs-and-interactivity.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-12-28-facets-and-a-lesson-in-humility/",
    "title": "Facets and a Lesson in Humility",
    "description": "A look at Tableau for Healthcare Chapter 8.  Table Lens graph.",
    "author": [
      {
        "name": "Kyle Belanger",
        "url": {}
      }
    ],
    "date": "2020-01-29",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nLoad Libraries\r\nImport Data\r\nClean Names and Transform\r\nGraphs\r\n\r\nTodays post is a lesson in Facets, as well as humility. The task this week was to replicate the graph in Chapter 8 of Tableau for Healthcare in R. The graph in question is called a Table Lens (This is the name the book uses, however I did have trouble finding this name in Google searches), it is a collection of charts with a common theme, this time looking at countries in various WHO regions and some statistics associated with mortality as well as health expenditure. I say this is a lesson in humiltiy as I have read through the excellent book R for Data Science, and yet the idea of faceting a ggplot graph slipped my mind. This ended with hours of trying to find a package in R to line up graphs, and way more time then I care to admit spent on getting things prefect. I did find such a package called cowplots, which can be found here. While this is an excellent package, its use was unecessary and I reverted back to using the excellent facet feature of GGplot, which can be seen below! \r\nLoad Libraries\r\n\r\n\r\nlibrary(magrittr) #pipes\r\nlibrary(ggplot2) #ploting \r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\n\r\n\r\n\r\nImport Data\r\n\r\n\r\nds <- readxl::read_xlsx(path = \"../2020-12-28-my-start-to-r/Tableau 10 Training Practice Data.xlsx\"\r\n                        ,sheet = \"03 - WHO Life Expect & Mort\"\r\n                        )\r\n\r\n\r\n\r\nClean Names and Transform\r\n\r\n\r\nvarnames <-  c(\"who_region\", \"country\", \"year\" , \"sex\" , \"life_expect_birth\" , \"neo_mort\"\r\n               ,\"under_five_mort\" , \"health_expenditure\")\r\nnames(ds) <- varnames\r\n\r\n# Order Countries based on Life Expectancy at Birth\r\n\r\nds$country <- factor(ds$country, levels = ds$country[order(ds$life_expect_birth)]) \r\n\r\n#To \"Long\" Form\r\n\r\nds1 <-  ds %>% pivot_longer(5:8)#select columns 5 throuh 8, leave new columns at default names\r\n\r\n# Set up labels for Facet, as well as function for Facet Labeller\r\n\r\nfacet_labels <-  list(\r\n\"life_expect_birth\"   = \"Life Expectancy at Birth \"                            \r\n,\"neo_mort\"           = \"Neonatal Mortality Rate\"             \r\n,\"under_five_mort\"    = \"Under-Five Mortality Rate\"\r\n,\"health_expenditure\" = \"Health Expenditure per Capita (US$)\"  )\r\n\r\nvariable_labeller <- function(variable,value){\r\n  return(facet_labels[value])\r\n}\r\n\r\n\r\n\r\nGraphs\r\n\r\n\r\nhightlight_countries <- (c(\"Mauritania\", \"South Africa\")) \r\n\r\ng1 <-  ds1 %>% filter(who_region == \"Africa\") %>% \r\n  mutate(name = factor(name, levels = c(\"life_expect_birth\" , \"neo_mort\"\r\n               ,\"under_five_mort\" , \"health_expenditure\"))\r\n         ,highlight = country %in% hightlight_countries) %>% \r\n  ggplot(aes(x = country, y = value, fill = highlight)) +\r\n  geom_col(show.legend = FALSE) +\r\n  coord_flip() +\r\n  labs(\r\n    title = \"World Bank Life Expectancy, Neonatal & Under-Five Mortality Rates, and Health Expenditure Analysis\"\r\n    ,x  = NULL\r\n    ,y = NULL\r\n  ) +\r\n  facet_grid(~name, scales = \"free_x\",labeller = variable_labeller) +\r\n  theme_bw() +\r\n  geom_text(aes(label = round(value, 0)), hjust = 0) +\r\n  scale_y_continuous(expand = expand_scale(mult = c(0,0.2))) +\r\n  scale_fill_manual(values = c(\"TRUE\" = \"#fc8d59\", \"FALSE\" = \"#2b83ba\"))\r\ng1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-28-facets-and-a-lesson-in-humility/facets-and-a-lesson-in-humility_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2020-12-28T22:02:50-05:00",
    "input_file": "facets-and-a-lesson-in-humility.utf8.md",
    "preview_width": 2304,
    "preview_height": 1344
  },
  {
    "path": "posts/2020-12-28-my-start-to-r/",
    "title": "My Start to R",
    "description": "A short introduction to my blog, and R journey.",
    "author": [
      {
        "name": "Kyle Belanger",
        "url": {}
      }
    ],
    "date": "2020-01-24",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nLoad Libraries\r\nImport Data\r\nClean Data Names\r\nConvert Data to ‘Long Form’\r\nGraph 5.1\r\n\r\nToday starts my attempt at sharing my R journey with the world! I have been learning R off and on now since late 2019, I have begun to take it much more serious as I work through my Data Analytics class at UCF. My love for all things numbers and graphs has really blossomed, and I am choosing to share that love with anyone who cares to read. I will not claim to be the best at R, or any programming for that matter, but these are my attempts. Each post in this serious will be replicated a graph created in Tableau from the book Tableau for Healthcare. Todays graph is a simple horizontal bar chart, in transferring to both a new blog site and computer I have unfortunately lost the original bar graph, but trust me the one I created looks just like it.\r\nLoad Libraries\r\n\r\n\r\nlibrary(tidyr)\r\nlibrary(magrittr)\r\nlibrary(ggplot2)\r\nlibrary(stringr)\r\nlibrary(dplyr)\r\n\r\n\r\n\r\nImport Data\r\n\r\n\r\nds <- readxl::read_excel(\r\n    path   = \"Tableau 10 Training Practice Data.xlsx\" \r\n    ,sheet = \"02 - Patient Falls-Single Hosp\"\r\n    )\r\n\r\n\r\n\r\nClean Data Names\r\n\r\n\r\n#should make reusable forumla at later time\r\nnames(ds) <- tolower(names(ds))\r\nnames(ds) <- str_replace_all(names(ds),\" \", \"_\")\r\n\r\n\r\n\r\nConvert Data to ‘Long Form’\r\n\r\n\r\nds1 <- ds %>% \r\n  gather(\"patient_falls_no_injury_rate\" , \"patient_falls_with_injury_rate\"\r\n         ,key   = \"injury\" \r\n         ,value = \"rate\" ) %>% \r\n  mutate(injury = (injury == \"patient_falls_with_injury_rate\"))\r\n\r\n\r\n\r\nGraph 5.1\r\n\r\n\r\nb1 <- ds %>% \r\n  ggplot(mapping = aes(x = reorder(type_of_care,total_patient_falls_rate ) , y = total_patient_falls_rate)) +\r\n  geom_col(fill = \"#2b83ba\") + \r\n  coord_flip() +\r\n  scale_y_continuous(breaks = NULL) +\r\n  theme(axis.ticks = element_blank()) +\r\n  labs(title = \"Rate of Patient Falls (per 1,000 Pateint Days)\\nby Type of Care for FY2017\"\r\n      ,x     = NULL\r\n      ,y     = NULL\r\n      ) +\r\n  theme_classic() +\r\n  geom_text(aes(label = format(total_patient_falls_rate, digits = 2)), nudge_y = -.25, color = \"white\")\r\n  \r\nb1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-28-my-start-to-r/my-start-to-r_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2020-12-28T21:58:03-05:00",
    "input_file": "my-start-to-r.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  }
]
