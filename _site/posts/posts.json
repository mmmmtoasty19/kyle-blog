[
  {
    "path": "posts/2020-12-28-basic-exploration-of-who-tuberculosis-data/",
    "title": "Basic Exploration of WHO Tuberculosis Data",
    "description": "Today I am going to dive into some real life data from the World Health Organization (WHO), exploring new and relapse cases of Tuberculosis.  I clean up the data, and then make a few graphs to explore different variables.",
    "author": [
      {
        "name": "Kyle Belanger",
        "url": {}
      }
    ],
    "date": "2020-02-13",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nTL:DR\r\nLoad Packages\r\nLoad in Data\r\nTransform\r\nJoin Data\r\nAnalyze\r\nSubset\r\nA different way to look\r\nFurther Exploration\r\n\r\nLast Exploration\r\n\r\nNext Steps\r\n\r\nTL:DR\r\nToday I am going to dive into some real life data from the World Health Organization (WHO), exploring new and relapse cases of Tuberculosis. I clean up the data, and then make a few graphs to explore different variables.\r\nLoad Packages\r\nSince I am going to use quite a few packages in the tidyverse I am going to load them all in at once instead of individually.\r\n\r\n\r\nlibrary(tidyverse)\r\n\r\n\r\n\r\nLoad in Data\r\nWe are using the WHO data set which contains tuberculosis (TB) cases broken down by year, this data set is contained in the Tidyr package, however its only recent up to 2014. For a little added fun I have downloaded the latest data from the WHO website, Found here. For some added fun I have also included GDP per Capita data from World bank Found here\r\n\r\n\r\nwho_raw <-  read.csv(\"TB_notifications_2020-02-11.csv\")\r\n\r\n#GPD file contains 4 rows of instrusctions above the actually data, we can tell\r\n#read.csv to skip these using the skip command\r\ngpd_raw <-  read.csv(\"API_NY.GDP.PCAP.CD_DS2_en_csv_v2_713080.csv\",\r\n                     skip = 4)\r\n\r\n\r\n\r\nTransform\r\nThis data set is very ugly looking! The first 3 columns are all country Identifiers, with column four indicating the WHO region. This is redundant and can be dropped down to one Identifier and Region. As we can see there are quite a few Variable columns that are in fact values and not true Variables. When reading the data dictionary for this data set, WHO has changed their reporting over the years, so for our purposes we can strip a lot of the extra data out. Lets try and look at three types of TB, Extrapulmonary, Lab Diagnosed, and Clinician Diagnosed. As well as try and look at the breakdowns by Age and Sex of new and relapse case (post 2012) Lots of Cleaning to do, lets get to it!\r\n\r\n\r\nwho1 <- who_raw %>% \r\n  #lets drop some columns not needed for our exploration, what each column means can be found in the CSV Data dictionary file\r\n  select(-iso2\r\n         ,-iso_numeric\r\n         ,-(rdx_data_available:hiv_reg_new2)\r\n         ,-(new_sp:rel_in_agesex_flg)\r\n         ) %>%\r\n  #Lets just look at new date\r\n  filter(year >= 2013) %>% \r\n  #Move the values that are currently stored as variables to observations\r\n  pivot_longer(cols = newrel_m04:newrel_sexunkageunk\r\n               ,names_to = \"key\"\r\n               ,values_to = \"values\"\r\n              ) %>% \r\n  separate(col = key\r\n           ,into = c(\"new\",\"sexage\")\r\n          ,sep = \"_\"\r\n          )  %>% \r\n  #the data set contains male, female and unknown\r\n  mutate_if(is.character\r\n            ,str_replace_all\r\n            ,pattern = \"sexunk\"\r\n            , replacement = \"u\"\r\n            ) %>% \r\n  separate(col = sexage\r\n           ,into = c(\"sex\",\"age\")\r\n           ,sep = 1) %>% \r\n  mutate(age_start = case_when(\r\n    str_detect(age, \"65\") ~ \"65\"\r\n    ,(str_length(age) == 2) ~ str_match(age, \"\\\\S\")\r\n    ,(str_length(age) == 3) ~ str_match(age, \"\\\\S\")\r\n    ,(str_length(age) == 4) ~ str_match(age, \"\\\\S\\\\S\")\r\n    \r\n    ,TRUE ~ \"\"\r\n    )\r\n    ,age_end = case_when(\r\n      str_detect(age, \"65\") ~ \"& Over\"\r\n      ,(str_length(age) == 2) ~ str_match(age, \"\\\\S$\")\r\n    ,(str_length(age) == 3) ~ str_match(age, \"\\\\S\\\\S$\")\r\n    ,(str_length(age) == 4) ~ str_match(age, \"\\\\S\\\\S$\")\r\n    ,TRUE ~ \"\"\r\n    ))\r\n\r\n#overall  WHO data is now cleaned and tidy.  \r\n  \r\n# Lets tidy up the GPD data so we can match it to our WHO data set\r\ngdp1 <- gpd_raw %>% \r\n  select(-(Indicator.Name:X2012)\r\n         ,-X2019\r\n         ,-X) %>% \r\n  pivot_longer(cols = X2013:X2018\r\n               ,names_to  = \"year\" \r\n               ,values_to = \"gdp\") %>% \r\n  mutate_if(is.character\r\n            ,str_remove_all\r\n            ,pattern = \"X(?=\\\\d*)\")  # regex to check for an X followed by a digit\r\n\r\n\r\n\r\nJoin Data\r\nLets combine the data sets so we can later visual TB Cases based on a countries GDP per capita.\r\n\r\n\r\nwho_combined <- who1 %>% \r\n  rename(Country.Code = iso3) %>% \r\n  mutate(year = as.character(year)) %>% \r\n  left_join(y = gdp1) %>% \r\n  select(-Country.Name)\r\n\r\n\r\n\r\nAnalyze\r\nLets first explore 2018 and see if GDP has any affect on the amount of TB cases in a particular country.\r\n\r\n\r\ng1 <- who_combined %>% \r\n  filter(str_detect(age,\"014|15plus|u\"),year == 2018) %>% \r\n  group_by(country) %>% \r\n  summarise(sum_tb_cases = (sum(values,na.rm = TRUE)/10000)\r\n            ,gdp = first(gdp)/1000\r\n            ,who_region = first(g_whoregion)) %>% \r\n  mutate(\r\n         label = ifelse((sum_tb_cases>50), yes = as.character(country),no = \"\")) %>% \r\n  ggplot(aes(x = gdp, y = sum_tb_cases )) +\r\n  geom_point(aes(color = who_region)) +\r\n  ggrepel::geom_text_repel(aes(x = gdp, y = sum_tb_cases, label = label)) +\r\n  labs(\r\n    title = \"Total TB Cases by Country compared to Gross Domestic Product (GDP)\"\r\n    ,x = \"GDP (per 1,000USD)\"\r\n    ,y = \"Total TB Case (per 10,000 cases)\"\r\n    ,color = \"WHO Region\"\r\n    ) +\r\n  theme_bw() \r\ng1\r\n\r\n\r\n\r\n\r\nSubset\r\nLets subset the above data to remove some of the outliers.\r\n\r\n\r\ng2 <- who_combined %>% \r\n  filter(str_detect(age,\"014|15plus|u\"),year == 2018) %>% \r\n  group_by(country) %>% \r\n  summarise(sum_tb_cases = (sum(values,na.rm = TRUE)/10000)\r\n            ,gdp = first(gdp)/1000\r\n            ,who_region = first(g_whoregion)) %>% \r\n  mutate(\r\n         label = ifelse((sum_tb_cases>50), yes = as.character(country),no = \"\")) %>% \r\n  ggplot(aes(x = gdp, y = sum_tb_cases )) +\r\n  geom_point(aes(color = who_region)) +\r\n  ggrepel::geom_text_repel(aes(x = gdp, y = sum_tb_cases, label = label)) +\r\n  labs(\r\n    title = \"Total TB Cases by Country compared to Gross Domestic Product (GDP)\"\r\n    ,x = \"GDP (per 1,000USD)\"\r\n    ,y = \"Total TB Case (per 10,000 cases)\"\r\n    ,color = \"WHO Region\"\r\n    ) +\r\n  xlim(0,50) +\r\n  ylim(0,50) +\r\n  theme_bw() \r\n\r\ng2\r\n\r\n\r\n\r\n\r\nWe can see in the graph above there seems to be a small correlation between lower GDP and amount of TB cases.\r\nA different way to look\r\nCould there be any correlation between a countries population and the amount of TB cases? Maybe its just as simple as having more people means more people to get sick? Lets bring in another data set, again from World Bank Found Here, this contains total population data by country.\r\n\r\n\r\npop_raw <-  read.csv(\"API_SP.POP.TOTL_DS2_en_csv_v2_713131.csv\"\r\n                     ,skip = 4)\r\n#If this looks famialer its because it is, the data set looks very simalar to the GDP data\r\n#In the future this could be moved to a function to allow cleaning much easier\r\npop1 <- pop_raw %>% \r\n  select(-(Indicator.Name:X2012)\r\n         ,-X2019\r\n         ,-X) %>% \r\n  pivot_longer(cols = X2013:X2018\r\n               ,names_to  = \"year\" \r\n               ,values_to = \"population\") %>% \r\n  mutate_if(is.character\r\n            ,str_remove_all\r\n            ,pattern = \"X(?=\\\\d*)\")\r\n\r\n#now lets combine this into are overall data set\r\n\r\nwho_combined <- who_combined %>% \r\n  mutate(year = as.character(year)) %>% \r\n  left_join(y = pop1) %>% \r\n  select(-Country.Name)\r\n\r\n#now lets Graph again\r\n\r\ng3 <- who_combined %>% \r\n  filter(str_detect(age,\"014|15plus|u\"),year == 2018) %>% \r\n  group_by(country) %>% \r\n  summarise(sum_tb_cases = (sum(values,na.rm = TRUE)/10000)\r\n            ,population = first(population)/1000000\r\n            ,who_region = first(g_whoregion)) %>% \r\n  mutate(\r\n         label = ifelse((population>250), yes = as.character(country),no = \"\")) %>%\r\n  ggplot(aes(x = population, y = sum_tb_cases )) +\r\n  geom_point(aes(color = who_region)) +\r\n  ggrepel::geom_text_repel(aes(x = population, y = sum_tb_cases, label = label)) +\r\n  labs(\r\n    title = \"Total TB Cases by Country compared to Gross Domestic Product (GDP)\"\r\n    ,x = \"Population (in Millions)\"\r\n    ,y = \"Total TB Case (per 10,000 cases)\"\r\n    ,color = \"WHO Region\"\r\n    ) +\r\n  theme_bw() \r\n\r\n g3 \r\n\r\n\r\n\r\n\r\nFurther Exploration\r\nMaybe we are on to something, the more people, the more likely they are to get sick! However India seems to have a very large number of cases so lets break these cases down further by age group for 2018.\r\n\r\n\r\ng4 <- who_combined %>% \r\n  filter(year == 2018\r\n         ,country == \"India\"\r\n         ,!(str_detect(age,\"15plus|ageunk|u|014\"))\r\n         ,(str_detect(sex,\"m|f\"))\r\n         )  %>% \r\n  mutate(age_range = glue::glue(\"{age_start} -- {age_end}\")) %>% \r\n  ggplot(aes(x = reorder(age_range, as.numeric(age_start)), y = (values/1000), fill = sex)) +\r\n  geom_col(position = \"dodge\") +\r\n  labs(\r\n    title = \"TB Case in India by age and gender 2018\"\r\n    ,x    = NULL\r\n    ,y    = \"Total Cases (per 1000)\"\r\n    ,fill = \"Gender\") +\r\n  scale_fill_manual(labels = c(\"Female\",\"Male\"), values = c(\"#e9a3c9\",\"#67a9cf\") )\r\n  \r\ng4\r\n\r\n\r\n\r\n\r\nThere seems to be a huge spike in cases after adolescences. Females have a sharp decline the older they get, where as male case stay elevated with a slight decrease at 55.\r\nLast Exploration\r\nLets look at overall cases in India, going back to 1980 and see if there as been any trends. To get these numbers we will go back to our raw data and strip everything out expect the total count\r\n\r\n\r\ng5 <- who_raw %>% \r\n  filter(country == \"India\") %>% \r\n  select(year, c_newinc) %>% \r\n  ggplot(aes(x = year, y = c_newinc/1000000)) +\r\n  geom_line() +\r\n  geom_point() +\r\n  labs(\r\n    title = \"New and Relapse Tuberculosis Cases In India \\n1980 -- 2018\"\r\n    ,x    = NULL\r\n    ,y    = \"Total Cases (in millions)\") +\r\n  theme_bw() +\r\n  theme(plot.title = element_text(hjust = 0.5)) + #center title \r\n  scale_x_continuous(breaks = seq(1980,2020,5)) +\r\n  scale_y_continuous(breaks = scales::pretty_breaks(n=10))  #different way to add tick marks\r\ng5\r\n\r\n\r\n\r\n\r\nCases were steadily rising from 1980 to 1990, then suddenly feel off. Starting in the early 2010s there was a sharp increase and the amount of new and relapse cases just keep growing.\r\nNext Steps\r\nWhile no other country has the amount of cases that India does, the sudden spike in cases at adolescences asks the question do other countries follow this same trend? We can also see the sudden spike in the 2010s, again is this just based in India or do we see this trend in other countries. There is much more exploration we can do with this data set at a later time!\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-28-basic-exploration-of-who-tuberculosis-data/basic-exploration-of-who-tuberculosis-data_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2020-12-28T22:13:15-05:00",
    "input_file": "basic-exploration-of-who-tuberculosis-data.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-12-28-line-graphs-and-interactivity/",
    "title": "Line Graphs and Interactivity",
    "description": "Tableau for Healthcare Chapter 10.  Static and Interactive examples",
    "author": [
      {
        "name": "Kyle Belanger",
        "url": {}
      }
    ],
    "date": "2020-02-10",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nLoad Libraries\r\nImport Data\r\nTransform Data\r\nGGplot\r\nplotly\r\n\r\nToday’s post is all about line graphs using both ggplot for a static graph as well as a package called plotly for interactivity (more on this later). The example graph and data is again coming from Tableau for Healthcare, Chapter 10. \r\nLoad Libraries\r\nAs always first step is to load in our libraries, I am using quite a few here, some are a bit overkill for this example but I wanted to play around with some fun features today.\r\n\r\n\r\nlibrary(magrittr) #pipes\r\nlibrary(ggplot2) #ploting \r\nlibrary(dplyr)  # data manipulation\r\nlibrary(tidyr) # tidy data\r\nlibrary(lubridate) #work with dates\r\nlibrary(stringr) # manipulate strings\r\nlibrary(plotly)\r\n\r\n\r\n\r\nImport Data\r\nNext lets import our data, this week we are using the sheet Flu Occurrence FY2013-2016. I am unsure if this is form a real data set or not but it is good for demonstration purposes! After importing we can glimpse at our data to understand what is contained within.\r\n\r\n\r\nds <- readxl::read_xlsx(path = \"../2020-12-28-my-start-to-r/Tableau 10 Training Practice Data.xlsx\"\r\n                        ,sheet = \"05 - Flu Occurrence FY2013-2016\"\r\n                        )\r\nds %>% glimpse()\r\n\r\n\r\nRows: 48\r\nColumns: 4\r\n$ Date                                         <dttm> 2012-10-27,...\r\n$ `Tests (+) for Influenza (count)`            <dbl> 995, 3228, 2...\r\n$ `Total Respiratory Specimens Tested (count)` <dbl> 18986, 24757...\r\n$ `% Tests (+) for Influenza`                  <dbl> 0.05240704, ...\r\n\r\nTransform Data\r\nI went a bit overboard today with renaming the variables. I wanted to practice writing a function and while it might not be the prettiest or the best way to do this, it worked for what I was trying to accomplish. Note the use of sapply, which lets us run the function on each column name.\r\n\r\n\r\nformat_names <- function(x) {\r\n  #Fucntion to set all names to lower case, and strip unneeded characters\r\n  x <- tolower(x)\r\n  x <- str_replace_all(x,c(#set each pattern equal to replacement\r\n                       \" \"         = \"_\"\r\n                      ,\"\\\\(\\\\+\\\\)\" = \"pos\"  #regualr experssion to match (+)\r\n                      ,\"\\\\(\"       = \"\"\r\n                      ,\"\\\\)\"       = \"\"\r\n                      ,\"\\\\%\"       = \"pct\"\r\n                      )\r\n                  ) \r\n                }\r\n\r\n#run the format name function on all names from DS\r\ncolnames(ds) <- sapply(colnames(ds),format_names)    \r\n\r\n\r\n\r\nNow is were the fun really starts! For this particular data set there are a couple things we need to add to replicate the example. In the original data set the date is stored with month, day, and year; the day is irrelevant and we need to pull out the month as well as the year. For this we can use the lubridate package, first we pull out the month and set it as a factor. For this example our year actually starts in October, so we set our factor to start at October (10), and end with September (9). We then pull out the year, which presents us with a different problem. Again our year starts in October, instead of January. To solve this I have created a variable called date adjustment, in this column is our month is 10 or greater, we will place a 1, if not a 0. We then set our fiscal year to be the actual year plus the date adjustment, this allows us to have our dates in the right fiscal year. Last the percent column is currently listed as a decimal, so we will convert this to a percentage.\r\n\r\n\r\n# split date time\r\nds1 <- ds %>% mutate(\r\n        #create month column, then set factors and labels to start fiscal year in Oct\r\n        month = month(ds$date)\r\n        ,month = factor(month\r\n                        ,levels = c(10:12, 1:9)\r\n                        ,labels = c(month.abb[10:12],month.abb[1:9]))\r\n       ,year = year(ds$date)\r\n        ,date_adjustment = ifelse(month(ds$date) >= 10, 1,0 )\r\n        ,fiscal_year = factor(year + date_adjustment)\r\n        #convert % Pos from decmial to pct\r\n        ,pct_tests_pos_for_influenza = round(pct_tests_pos_for_influenza * 100, digits = 0)\r\n        )\r\n\r\nds1 %>% glimpse()\r\n\r\n\r\nRows: 48\r\nColumns: 8\r\n$ date                                     <dttm> 2012-10-27, 201...\r\n$ tests_pos_for_influenza_count            <dbl> 995, 3228, 22368...\r\n$ total_respiratory_specimens_tested_count <dbl> 18986, 24757, 66...\r\n$ pct_tests_pos_for_influenza              <dbl> 5, 13, 34, 33, 2...\r\n$ month                                    <fct> Oct, Nov, Dec, J...\r\n$ year                                     <dbl> 2012, 2012, 2012...\r\n$ date_adjustment                          <dbl> 1, 1, 1, 0, 0, 0...\r\n$ fiscal_year                              <fct> 2013, 2013, 2013...\r\n\r\nGGplot\r\nThe graph here is pretty straight forward with one exception, group! For this line graph we want ggplot to connect the lines of the same year, if we do not explicitly state this using the group mapping, ggplot will try to connect all the lines together, which of course is not at all what we want!\r\n\r\n\r\ng1 <- ds1 %>% \r\n    ggplot(aes(x = month, y = pct_tests_pos_for_influenza, color = fiscal_year\r\n               ,group = fiscal_year)) +\r\n  geom_line() +\r\n  labs(\r\n    x  = NULL\r\n    ,y = \"% Tests (+) for Influenza\"\r\n    ,color = NULL\r\n    ,title = \"Flu Viral Surveillance: % Respiratory Specimens Positive for Influenza \\nOctober - September \\nFor Flu Seasons 2013 - 2016\"\r\n  ) +\r\n  theme_classic() +\r\n  scale_y_continuous(breaks = seq(0,40,5)) +\r\n  scale_color_manual(values = c(\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"))\r\n\r\ng1\r\n\r\n\r\n\r\n\r\nplotly\r\nOne of the nice features of Tableau is the fact the graphs are interactive, while a good graph should speak for itself, end users love pretty things. I have been experimenting with Plotly, which has an open source package for R (as well as many other programming languages!). This example only just scratches the surface, but there will be many more to come!\r\n\r\n\r\ng2 <- ds1 %>% \r\n    plot_ly(x = ~month, y = ~pct_tests_pos_for_influenza, type = \"scatter\", mode = \"lines\" \r\n            ,color = ~fiscal_year\r\n            ,colors = c(\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\")\r\n            , hoverinfo = 'y') %>% \r\n    layout(xaxis = list(\r\n                        title = \"\"\r\n                    )\r\n           ,yaxis = list(\r\n                        title = \"% Tests (+) for Influenza\"\r\n                    )\r\n           ,title = \"Flu Viral Surveillance: % Respiratory Specimens Positive for Influenza\"\r\n           ,legend = list(\r\n                      x = 100\r\n                      ,y = 0.5\r\n                      )   \r\n           \r\n           )\r\n\r\ng2\r\n\r\n\r\npreserve0ddc9293b1cc8f4f\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-28-line-graphs-and-interactivity/line-graphs-and-interactivity_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2020-12-28T22:08:09-05:00",
    "input_file": "line-graphs-and-interactivity.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-12-28-facets-and-a-lesson-in-humility/",
    "title": "Facets and a Lesson in Humility",
    "description": "A look at Tableau for Healthcare Chapter 8.  Table Lens graph.",
    "author": [
      {
        "name": "Kyle Belanger",
        "url": {}
      }
    ],
    "date": "2020-01-29",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nLoad Libraries\r\nImport Data\r\nClean Names and Transform\r\nGraphs\r\n\r\nTodays post is a lesson in Facets, as well as humility. The task this week was to replicate the graph in Chapter 8 of Tableau for Healthcare in R. The graph in question is called a Table Lens (This is the name the book uses, however I did have trouble finding this name in Google searches), it is a collection of charts with a common theme, this time looking at countries in various WHO regions and some statistics associated with mortality as well as health expenditure. I say this is a lesson in humiltiy as I have read through the excellent book R for Data Science, and yet the idea of faceting a ggplot graph slipped my mind. This ended with hours of trying to find a package in R to line up graphs, and way more time then I care to admit spent on getting things prefect. I did find such a package called cowplots, which can be found here. While this is an excellent package, its use was unecessary and I reverted back to using the excellent facet feature of GGplot, which can be seen below! \r\nLoad Libraries\r\n\r\n\r\nlibrary(magrittr) #pipes\r\nlibrary(ggplot2) #ploting \r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\n\r\n\r\n\r\nImport Data\r\n\r\n\r\nds <- readxl::read_xlsx(path = \"../2020-12-28-my-start-to-r/Tableau 10 Training Practice Data.xlsx\"\r\n                        ,sheet = \"03 - WHO Life Expect & Mort\"\r\n                        )\r\n\r\n\r\n\r\nClean Names and Transform\r\n\r\n\r\nvarnames <-  c(\"who_region\", \"country\", \"year\" , \"sex\" , \"life_expect_birth\" , \"neo_mort\"\r\n               ,\"under_five_mort\" , \"health_expenditure\")\r\nnames(ds) <- varnames\r\n\r\n# Order Countries based on Life Expectancy at Birth\r\n\r\nds$country <- factor(ds$country, levels = ds$country[order(ds$life_expect_birth)]) \r\n\r\n#To \"Long\" Form\r\n\r\nds1 <-  ds %>% pivot_longer(5:8)#select columns 5 throuh 8, leave new columns at default names\r\n\r\n# Set up labels for Facet, as well as function for Facet Labeller\r\n\r\nfacet_labels <-  list(\r\n\"life_expect_birth\"   = \"Life Expectancy at Birth \"                            \r\n,\"neo_mort\"           = \"Neonatal Mortality Rate\"             \r\n,\"under_five_mort\"    = \"Under-Five Mortality Rate\"\r\n,\"health_expenditure\" = \"Health Expenditure per Capita (US$)\"  )\r\n\r\nvariable_labeller <- function(variable,value){\r\n  return(facet_labels[value])\r\n}\r\n\r\n\r\n\r\nGraphs\r\n\r\n\r\nhightlight_countries <- (c(\"Mauritania\", \"South Africa\")) \r\n\r\ng1 <-  ds1 %>% filter(who_region == \"Africa\") %>% \r\n  mutate(name = factor(name, levels = c(\"life_expect_birth\" , \"neo_mort\"\r\n               ,\"under_five_mort\" , \"health_expenditure\"))\r\n         ,highlight = country %in% hightlight_countries) %>% \r\n  ggplot(aes(x = country, y = value, fill = highlight)) +\r\n  geom_col(show.legend = FALSE) +\r\n  coord_flip() +\r\n  labs(\r\n    title = \"World Bank Life Expectancy, Neonatal & Under-Five Mortality Rates, and Health Expenditure Analysis\"\r\n    ,x  = NULL\r\n    ,y = NULL\r\n  ) +\r\n  facet_grid(~name, scales = \"free_x\",labeller = variable_labeller) +\r\n  theme_bw() +\r\n  geom_text(aes(label = round(value, 0)), hjust = 0) +\r\n  scale_y_continuous(expand = expand_scale(mult = c(0,0.2))) +\r\n  scale_fill_manual(values = c(\"TRUE\" = \"#fc8d59\", \"FALSE\" = \"#2b83ba\"))\r\ng1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-28-facets-and-a-lesson-in-humility/facets-and-a-lesson-in-humility_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2020-12-28T22:02:50-05:00",
    "input_file": "facets-and-a-lesson-in-humility.utf8.md",
    "preview_width": 2304,
    "preview_height": 1344
  },
  {
    "path": "posts/2020-12-28-my-start-to-r/",
    "title": "My Start to R",
    "description": "A short introduction to my blog, and R journey.",
    "author": [
      {
        "name": "Kyle Belanger",
        "url": {}
      }
    ],
    "date": "2020-01-24",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nLoad Libraries\r\nImport Data\r\nClean Data Names\r\nConvert Data to ‘Long Form’\r\nGraph 5.1\r\n\r\nToday starts my attempt at sharing my R journey with the world! I have been learning R off and on now since late 2019, I have begun to take it much more serious as I work through my Data Analytics class at UCF. My love for all things numbers and graphs has really blossomed, and I am choosing to share that love with anyone who cares to read. I will not claim to be the best at R, or any programming for that matter, but these are my attempts. Each post in this serious will be replicated a graph created in Tableau from the book Tableau for Healthcare. Todays graph is a simple horizontal bar chart, in transferring to both a new blog site and computer I have unfortunately lost the original bar graph, but trust me the one I created looks just like it.\r\nLoad Libraries\r\n\r\n\r\nlibrary(tidyr)\r\nlibrary(magrittr)\r\nlibrary(ggplot2)\r\nlibrary(stringr)\r\nlibrary(dplyr)\r\n\r\n\r\n\r\nImport Data\r\n\r\n\r\nds <- readxl::read_excel(\r\n    path   = \"Tableau 10 Training Practice Data.xlsx\" \r\n    ,sheet = \"02 - Patient Falls-Single Hosp\"\r\n    )\r\n\r\n\r\n\r\nClean Data Names\r\n\r\n\r\n#should make reusable forumla at later time\r\nnames(ds) <- tolower(names(ds))\r\nnames(ds) <- str_replace_all(names(ds),\" \", \"_\")\r\n\r\n\r\n\r\nConvert Data to ‘Long Form’\r\n\r\n\r\nds1 <- ds %>% \r\n  gather(\"patient_falls_no_injury_rate\" , \"patient_falls_with_injury_rate\"\r\n         ,key   = \"injury\" \r\n         ,value = \"rate\" ) %>% \r\n  mutate(injury = (injury == \"patient_falls_with_injury_rate\"))\r\n\r\n\r\n\r\nGraph 5.1\r\n\r\n\r\nb1 <- ds %>% \r\n  ggplot(mapping = aes(x = reorder(type_of_care,total_patient_falls_rate ) , y = total_patient_falls_rate)) +\r\n  geom_col(fill = \"#2b83ba\") + \r\n  coord_flip() +\r\n  scale_y_continuous(breaks = NULL) +\r\n  theme(axis.ticks = element_blank()) +\r\n  labs(title = \"Rate of Patient Falls (per 1,000 Pateint Days)\\nby Type of Care for FY2017\"\r\n      ,x     = NULL\r\n      ,y     = NULL\r\n      ) +\r\n  theme_classic() +\r\n  geom_text(aes(label = format(total_patient_falls_rate, digits = 2)), nudge_y = -.25, color = \"white\")\r\n  \r\nb1\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-28-my-start-to-r/my-start-to-r_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2020-12-28T21:58:03-05:00",
    "input_file": "my-start-to-r.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  }
]
